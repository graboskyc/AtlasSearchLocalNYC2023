@page "/Results02/{SearchTerm}"
@using MongoDB.Bson;
@using MongoDB.Driver;
@using MongoDB.Driver.Search;
@using AtlasSearchNYC.Datamodels;
@using System;

<PageTitle>Content</PageTitle>

<h1>Search Results</h1>

<SearchBarBasic SearchTerm="@SearchTerm" Redirect="Results02"  OnSearchCallback="@ChangeSearchTerm" />

<div class="row" style="margin-top:20px;">
    @if(movies != null) {
        @foreach (var t in movies)
        {
            <MovieTile SourceMovie=@t />
        }
    }
</div>


@code {
    [Parameter]
    public string SearchTerm {get; set;}
    private List<Datamodels.Movie> movies = new List<Movie>();

    private async void ChangeSearchTerm(string term) {
        SearchTerm = term;
        await RunSearch();
    }

    protected override async Task OnInitializedAsync()
    { 
        await RunSearch();

    }

    private async Task RunSearch() {

        string MDBCONNSTR = Environment.GetEnvironmentVariable("MDBCONNSTR");
        var settings = MongoClientSettings.FromConnectionString(MDBCONNSTR);
        settings.ServerApi = new ServerApi(ServerApiVersion.V1);
        var client = new MongoClient(settings);
        var database = client.GetDatabase("sample_mflix");
        var col = database.GetCollection<Datamodels.Movie>("movies");
        
        var result = await col.Aggregate()
            .Search(Builders<Datamodels.Movie>.Search
                .Text(Builders<Datamodels.Movie>.SearchPath.Multi("title", "fullplot"), SearchTerm),
            indexName: "sort"
            )
            .Limit(25)
            .ToListAsync();

        movies = result;

    }
}